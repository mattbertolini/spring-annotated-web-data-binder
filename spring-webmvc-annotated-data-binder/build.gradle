plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

dependencies {
    api project(':spring-annotated-data-binder-core')
    api 'org.springframework:spring-webmvc'
    implementation 'javax.servlet:javax.servlet-api'
    compileOnly 'com.google.code.findbugs:jsr305'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'javax.validation:validation-api:2.0.1.Final'
    testCompileOnly 'com.google.code.findbugs:jsr305'
}

jar {
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': archiveVersion,
            'Automatic-Module-Name': 'com.mattbertolini.spring.web.servlet.mvc.bind'
        )
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

test.finalizedBy jacocoTestReport
projectsWithCoverage << project

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username findProperty('sonatype.ossrh.username')
                password findProperty('sonatype.ossrh.password')
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java

            pom {
                name = 'Spring MVC Annotated Data Binder'
                description = 'Annotated Java Bean data binder for Spring MVC'
                url = 'https://github.com/mattbertolini/spring-annotated-web-data-binder'
                developers {
                    developer {
                        name = 'Matt Bertolini'
                    }
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/mattbertolini/spring-annotated-web-data-binder.git'
                    developerConnection = 'scm:git:ssh://github.com/mattbertolini/spring-annotated-web-data-binder.git'
                    url = 'https://github.com/mattbertolini/spring-annotated-web-data-binder'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
